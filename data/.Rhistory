cyl_mpg <- plot_ly(data=mtcars, x=mtcars$cyl, y=~mtcars$mpg, type = "box",
layout(title="MPG vs Number of Cylinders", xaxis="Miles Per Gal",
yaxis="Number of Cylinders"))
cyl_mpg <- cyl_mpg %>% layout(title="MPG vs Number of Cylinders", xaxis="Miles Per Gal",
yaxis="Number of Cylinders"))
cyl_mpg <- plot_ly(data=mtcars, x=mtcars$cyl, y=~mtcars$mpg, type = "box")
cyl_mpg <- cyl_mpg %>% layout(xaxis=list("Miles Per Gal"), yaxis=list("Number of Cylinders"))
cyl_mpg
cyl_mpg <- cyl_mpg %>% layout(xaxis=list("Miles Per Gal"), yaxis=list("Number of Cylinders"))
cyl_mpg
#install.packages("dismo")
#install.packages("raster")
#install.packages("rgdal")
#install.packages("rJava")
#install.packages("maptools")
#install.packages("readr")
#summon packages
library(dismo)
library(maptools)
library (plotly)
library(sp)
library(rgdal)
library(stringr)
library(readr)
library(dplyr)
#-------------------------------------------------------------------------------------
#import occurrence data, data cleaning/sorting
files <- list.files(path="C:/Users/12094/Desktop/apENM/data", pattern = "^hf147-1(.*).csv$", full.names = TRUE)
Data <- sapply(files, read.csv, simplify=FALSE) %>% bind_rows(.id = "id") %>%
select(latitude, longitude, ant.genus, ant.species) %>%
as.data.frame() %>% na.omit() %>% filter(ant.genus=="Aphaenogaster") %>%
select(-ant.genus)
Arudis <- filter(Data, ant.species=="rudis") %>%
unique() %>% select(-ant.species)
data("wrld_simpl")
plot(wrld_simpl, xlim=c(min(Arudis$lon), max(Arudis$lon)),
ylim=c(min(Arudis$lat), max(Arudis$lat)), axes=TRUE,
col="grey93")
points(Arudis$lon, Arudis$lat, col="orange", cex=0.75)
library(sp)
head(Arudis)
coordinates(Arudis) <- ~longitude+latitude
coordinates(Arudis)
crs(Arudis) <- crs(wrld_simpl)
crs(Arudis)
class(Arudis)
class(wrld_simpl)
ovr <- over(Arudis, wrld_simpl)
ovr
plot(ovr)
sum(ovr)
sum(is.na(ovr))
nrow(ovr)
no_country <- is.na(ovr$NAME)
no_country
no_country <- which(is.na(ovr$NAME))
no_country
head(ovr)
ocean <- which(is.na(ovr$NAME))
nrow(ovr)
ocean <- which(is.na(ovr$NAME))
ocean
points(ovr$lon, ovr$lat, col="orange", cex=0.75)
points(ovr$lon, ovr$lat, col="green", cex=0.75)
points(ovr$lon, ovr$lat, col="green", cex=0.75)
plot(wrld_simpl, xlim=c(min(Arudis$lon), max(Arudis$lon)),
ylim=c(min(Arudis$lat), max(Arudis$lat)), axes=TRUE,
col="grey93")
plot(wrld_simpl, xlim=c(min(Arudis$lon), max(Arudis$lon)),
ylim=c(min(Arudis$lat), max(Arudis$lat)), axes=TRUE,
col="grey93")
Arudis <- filter(Data, ant.species=="rudis") %>%
unique() %>% select(-ant.species)
plot(wrld_simpl, xlim=c(min(Arudis$lon), max(Arudis$lon)),
ylim=c(min(Arudis$lat), max(Arudis$lat)), axes=TRUE,
col="grey93")
points(ovr$lon, ovr$lat, col="green", cex=0.75)
points(ovr$LON, ovr$LAT, col="green", cex=0.75)
head(ovr$LAT)
plot(wrld_simpl, axes=TRUE, col="grey93")
points(ovr$LON, ovr$LAT, col="green", cex=0.75)
plot(wrld_simpl, xlim=c(min(ovr$LON), max(ovr$LON)),
ylim=c(min(ovr$LAT), max(ovr$LAT)), axes=TRUE,
col="grey93")
min(ovr$LON)
ovr
head(Arudis)
head(ovr)
ocean <- which(is.na(ovr$NAME))
ocean
ovr[2,]
Head(Arudis)
head(Arudis)
Arudis[2,]
Arudis[c(ocean),]
Arudis_no_ocean <- filter([c(-2), ])
Arudis_no_ocean <- filter(Arudis, [-2, ])
Arudis_no_ocean <- filter(Arudis[-2, ])
Arudis_no_ocean
rm(Arudis_no_ocean)
Arudis[2, ]
filter(Arudis[2, ])
filter(Arudis[-2, ])
Arudis_no_ocean <- filter(Arudis[-(ocean), ])
nrow(Arudis)
nrow(Arudis_no_ocean)
nrow(ovr)
nrow(ocean)
head(Arudis_no_ocean)
data("wrld_simpl")
plot(wrld_simpl, xlim=c(min(Arudis_no_ocean$longitude), max(Arudis_no_ocean$longitude)),
ylim=c(min(Arudis_no_ocean$latitude), max(Arudis_no_ocean$latitude)), axes=TRUE,
col="grey93")
points(Arudis_no_ocean$longitude, Arudis_no_ocean$latitude, col="orange", cex=0.75)
coordinates(Arudis) <- ~longitude+latitude
crs(Arudis) <- crs(wrld_simpl)
ovr <- over(Arudis, wrld_simpl)
ocean_points <- which(is.na(ovr$NAME))
Arudis <- filter(Arudis[-(ocean_points), ])
#----------------------------------------------------------------------------------------
#Inspect occurrence data visually with a quick map
coordinates(Arudis) <- ~longitude+latitude
Arudis <- filter(Data, ant.species=="rudis") %>%
unique() %>% select(-ant.species)
#----------------------------------------------------------------------------------------
#Inspect occurrence data visually with a quick map
coordinates(Arudis) <- ~longitude+latitude
crs(Arudis) <- crs(wrld_simpl)
ovr <- over(Arudis, wrld_simpl)
ocean_points <- which(is.na(ovr$NAME))
rm(ocean)
ocean
rm(no_country)
rm(Arudis_no_ocean)
#----------------------------------------------------------------------------------------
#Inspect occurrence data visually with a quick map
coordinates(Arudis) <- ~longitude+latitude
Arudis <- filter(Data, ant.species=="rudis") %>%
unique() %>% select(-ant.species)
#----------------------------------------------------------------------------------------
#Inspect occurrence data visually with a quick map
coordinates(Arudis) <- ~longitude+latitude
crs(Arudis) <- crs(wrld_simpl)
ovr <- over(Arudis, wrld_simpl)
ocean_points <- which(is.na(ovr$NAME))
Arudis <- filter(Arudis[-(ocean_points), ])
head(Arudis)
Arudis <- filter(Data, ant.species=="rudis") %>%
unique() %>% select(-ant.species)
head(Arudis)
#----------------------------------------------------------------------------------------
#Inspect occurrence data visually with a quick map
coordinates(Arudis) <- ~longitude+latitude
head(Arudis)
crs(Arudis) <- crs(wrld_simpl)
ovr <- over(Arudis, wrld_simpl)
ocean_points <- which(is.na(ovr$NAME))
rudis <- filter(Arudis[-(ocean_points), ])
Arudis <- filter(Data, ant.species=="rudis") %>%
unique() %>% select(-ant.species)
head(Arudis)
Arudis <- filter(Data, ant.species=="rudis") %>%
unique() %>% select(-ant.species)
coordinates(Arudis) <- ~longitude+latitude
crs(Arudis) <- crs(wrld_simpl)
ovr <- over(Arudis, wrld_simpl)
ocean_points <- which(is.na(ovr$NAME))
Arudis <- filter(Arudis[-(ocean_points), ])
Arudis <- filter(Data, ant.species=="rudis") %>%
unique() %>% select(-ant.species)
Arudis <- filter(Arudis[-(ocean_points), ])
nrow(Arudis)
hea(Arudis)
head(Arudis)
coordinates(Arudis) <- ~longitude+latitude
crs(Arudis) <- crs(wrld_simpl)
ovr <- over(Arudis, wrld_simpl)
ocean_points <- which(is.na(ovr$NAME))
Arudis
as.data.frame(Arudis)
Arudis <- filter(Data, ant.species=="rudis") %>%
unique() %>% select(-ant.species)
nrow(Arudis)
coordinates(Arudis) <- ~longitude+latitude
coordinates(Arudis) <- ~longitude+latitude
head(Arudis)
crs(Arudis) <- crs(wrld_simpl)
ovr <- over(Arudis, wrld_simpl)
ocean_points <- which(is.na(ovr$NAME))
Arudis <- as.data.frame(Arudis)
nrow(Arudis)
Arudis <- filter(Arudis[-(ocean_points), ])
nrow(Arudis)
head(Arudis)
data("wrld_simpl")
plot(wrld_simpl, xlim=c(min(Arudis$longitude), max(Arudis$longitude)),
ylim=c(min(Arudis$latitude), max(Arudis$latitude)), axes=TRUE,
col="grey93")
points(Arudis$longitude, Arudis$latitude, col="orange", cex=0.75)
Data = sapply(files, read.csv, simplify=FALSE) %>% bind_rows(.id = "id") %>%
select(latitude, longitude, ant.genus, ant.species) %>%
as.data.frame() %>% na.omit() %>% filter(ant.genus=="Aphaenogaster") %>%
select(-ant.genus)
head(Data)
Data$ant.species=="rudis"
Data$ant.species
Data$ant.species
rm_oceanpts <- function(Data, species){filter(Data, ant.species=="species") %>%
unique() %>% select(-ant.species)
coordinates(species) <- ~longitude+latitude
crs(Arudis) <- crs(wrld_simpl)
ovr <- over(species, wrld_simpl)
ocean_points <- which(is.na(ovr$NAME))
as.data.frame(species)
species <- filter(species[-(ocean_points), ]
return(species)}
species <- Data$ant.species==species
rm_oceanpts <- function(Data, ants){
species <- filter(Data, ant.species==ants) %>%
unique() %>% select(-ant.species)
coordinates(species) <- ~longitude+latitude
crs(species) <- crs(wrld_simpl)
ovr <- over(species, wrld_simpl)
ocean_points <- which(is.na(ovr$NAME))
as.data.frame(species)
species <- filter(species[-(ocean_points), ]
return(species)}
rm_oceanpts <- function(Data, ants){
species <- filter(Data, ant.species==ants) %>%
unique() %>% select(-ant.species)
coordinates(species) <- ~longitude+latitude
crs(species) <- crs(wrld_simpl)
ovr <- over(species, wrld_simpl)
ocean_points <- which(is.na(ovr$NAME))
as.data.frame(species)
species <- filter(species[-(ocean_points), ]
return(species)}
rm_oceanpts <- function(Data, ants)
{species <- filter(Data, ant.species==ants) %>%
unique() %>% select(-ant.species)
coordinates(species) <- ~longitude+latitude
crs(species) <- crs(wrld_simpl)
ovr <- over(species, wrld_simpl)
ocean_points <- which(is.na(ovr$NAME))
as.data.frame(species)
species <- filter(species[-(ocean_points),])}
rm_oceanpts(Data, rudis)
rm_oceanpts(Data, "rudis")
rm_oceanpts <- function(df, ant_species)
{species <- filter(df, ant.species==ant_species) %>%
unique() %>% select(-ant.species)
coordinates(species) <- ~longitude+latitude
crs(species) <- crs(wrld_simpl)
ovr <- over(species, wrld_simpl)
ocean_points <- which(is.na(ovr$NAME))
as.data.frame(species)
species <- filter(species[-(ocean_points),])
return(species)}
rm_oceanpts(Data, rudis)
rm_oceanpts <- function(df, ant_species)
{species <- filter(df, ant.species==ant_species)
species <- unique(species)
species <- select(-ant.species)
coordinates(species) <- ~longitude+latitude
crs(species) <- crs(wrld_simpl)
ovr <- over(species, wrld_simpl)
ocean_points <- which(is.na(ovr$NAME))
as.data.frame(species)
species <- filter(species[-(ocean_points),])
return(species)}
rm_oceanpts(Data, rudis)
Data$ant.species
rm_oceanpts <- function(df, ant_species)
{species <- filter(df, Data$ant.species==ant_species)}
rm_oceanpts(Data, rudis)
rm_oceanpts <- function(df, ant_species)
{species <- filter(df, ant.species==ant_species)}
rm_oceanpts <- function(df, "")
{species <- filter(df, Data$ant.species=="")
return(head(species))}
rm_oceanpts <- function(df, ant_species)
{species <- filter(df, ant.species==ant_species)}
rm_oceanpts <- function(df, ant_species)
rm_oceanpts <- function(df, species_name)
{species <- filter(df, species_name=Data$ant.species==species_name)
return(head(species))}
rm_oceanpts(Data, rudis)
rm_oceanpts <- function(df, species_name)
{species <- filter(df, species_name=Data$ant.species==species_name)
return(species)}
# species <- uni
rm_oceanpts(Data, rudis)
species_name <- "rudis"
Data$ant.species==species_name
filter(Data, Data$ant.species==species_name)
rm_oceanpts <- function(df, species_name="")
{species <- filter(df, Data$ant.species==species_name)
return(species)}
rm_oceanpts(Data, "rudis")
rm_oceanpts <- function(df, species_name=""){
species <- filter(df, Data$ant.species==species_name) %>%
unique() %>% select(-ant.species)
return(species)}
rm_oceanpts(Data, "rudis")
rm_oceanpts <- function(df, species_name=""){
species <- filter(df, Data$ant.species==species_name) %>%
unique() %>% select(-ant.species)
coordinates(species) <- ~longitude+latitude
return(species)}
rm_oceanpts(Data, "rudis")
rm_oceanpts <- function(df, species_name=""){
species <- filter(df, Data$ant.species==species_name) %>%
unique() %>% select(-ant.species)
coordinates(species) <- ~longitude+latitude
crs(species) <- crs(wrld_simpl)
ovr <- over(species, wrld_simpl)
ocean_points <- which(is.na(ovr$NAME))
as.data.frame(species)
species <- filter(species[-(ocean_points),])
return(species)}
rm_oceanpts(Data, "rudis")
rm_oceanpts <- function(df, species_name=""){
species <- filter(df, Data$ant.species==species_name) %>%
unique() %>% select(-ant.species)
coordinates(species) <- ~longitude+latitude
crs(species) <- crs(wrld_simpl)
ovr <- over(species, wrld_simpl)
ocean_points <- which(is.na(ovr$NAME))
as.data.frame(species)
species <- filter(species[-(ocean_points),])
return(species)}
rm_oceanpts(Data, "rudis")
rm_oceanpts <- function(df, species_name=""){
species <- filter(df, Data$ant.species==species_name) %>%
unique() %>% select(-ant.species)
coordinates(species) <- ~longitude+latitude
crs(species) <- crs(wrld_simpl)
ovr <- over(species, wrld_simpl)
ocean_points <- which(is.na(ovr$NAME))
species <- as.data.frame(species)
species <- filter(species[-(ocean_points),])
return(species)}
rm_oceanpts(Data, "rudis")
nrow(rm_oceanpts(Data, "rudis"))
rm_oceanpts <- function(df, species_name=""){
species <- filter(df, Data$ant.species==species_name) %>%
unique() %>% select(-ant.species)
coordinates(species) <- ~longitude+latitude
crs(species) <- crs(wrld_simpl)
ovr <- over(species, wrld_simpl)
ocean_points <- which(is.na(ovr$NAME))
species <- as.data.frame(species)
species <- filter(species[-(ocean_points),])
return(species)
return(nrow(species))}
nrow(rm_oceanpts(Data, "rudis"))
rm_oceanpts(Data, "rudis")
rm_oceanpts(Data, "picea")
ocean_points
species <- filter(df, Data$ant.species==species_name) %>%
unique() %>% select(-ant.species)
head(Data$ant.species=="rudis")
head(filter(Data, ant.species=="rudis"))
head(select(Data, ant.species=="rudis"))
Data
Data$ant.species
filter(Data$ant.species)
filter(Data$ant.species)
filter(Data$ant.species=="rudis")
filter(Data, Data$ant.species=="rudis')
filter(Data, Data$ant.species=="rudis")
rm_oceanpts(Data, "rudis")
#packages.R
#____________________________________________________________________________
#install necessary packages individually or all at once using the c() fucntion
#install.packages(c("dismo", "raster", "rgdal", "rJava"))
#install.packages("dismo")
#install.packages("raster")
#install.packages("rgdal")
#install.packages("rJava")
#install.packages("maptools")
#install.packages("readr")
#summon packages
library(dismo)
library(maptools)
library (plotly)
library(sp)
library(rgdal)
library(stringr)
library(readr)
library(dplyr)
rm_oceanpts(Data, "rudis")
species <- filter(Data, Data$ant.species=="rudis')
species <- filter(Data, Data$ant.species=="rudi")
species
rm(species)
Data <- sapply(files, read.csv, simplify=FALSE) %>% bind_rows(.id = "id") %>%
select(latitude, longitude, ant.genus, ant.species) %>%
as.data.frame() %>% na.omit() %>% filter(ant.genus=="Aphaenogaster") %>%
select(-ant.genus)
head(Data$ant.species=='rudis')
Data <- sapply(files, read.csv, simplify=FALSE) %>% bind_rows(.id = "id") %>%
select(latitude, longitude, ant.genus, ant.species) %>%
as.data.frame() %>% na.omit() %>% filter(ant.genus=="Aphaenogaster") %>%
select(-ant.genus)
Data$ant.species=='rudis'
filter(Data$ant.species=='rudis')
colnames(Data)
filter(Data, ant.species=="rudis")
Arudis <- filter(Data, ant.species=="rudis")
unique(Arudis)
Arudis <- filter(Data, ant.species=="rudis") %>% unique()
Arudis
Arudis[2,]
Arudis[11,]
Arudis[30,]
Arudis[31,]
Arudis[32,]
Arudis[33,]
ocean_points
Arudis[c(35,36,37,38, 65, 70,72,73, 75,77),]
data("wrld_simpl")
plot(wrld_simpl, xlim=c(min(Arudis$longitude), max(Arudis$longitude)),
ylim=c(min(Arudis$latitude), max(Arudis$latitude)), axes=TRUE,
col="grey93")
points(Arudis$longitude, Arudis$latitude, col="orange", cex=0.75)
data("wrld_simpl")
plot(wrld_simpl, xlim=c(min(Arudis$longitude), max(Arudis$longitude)),
ylim=c(min(Arudis$latitude), max(Arudis$latitude)), axes=TRUE,
col="grey93")
points(Arudis$longitude, Arudis$latitude, col="orange", cex=0.75)
head(Arudis)
plot(wrld_simpl, xlim=c(min(Arudis$longitude), max(Arudis$longitude)),
ylim=c(min(Arudis$latitude), max(Arudis$latitude)), axes=TRUE,
col="grey93")
data("wrld_simpl")
plot(wrld_simpl, xlim=c(min(Arudis$longitude), max(Arudis$longitude)),
ylim=c(min(Arudis$latitude), max(Arudis$latitude)), axes=TRUE,
col="grey93")
points(Arudis$longitude, Arudis$latitude, col="orange", cex=0.75)
require(raster) # package to handle raster-formatted spatial data
ggetwd()
getwd()
setwd("C:/Users/12094/Desktop/apENM/data")
getwd()
head(Data)
max(Data$longitude)
min(Data$longitude)
min(Data$latitude)
max(Data$latitude)
require(raster) # package to handle raster-formatted spatial data
BClim = getData("worldclim", var="bio", res=2.5, path="C:/Users/12094/Desktop/apENM/data")
BClim
YbrevRange = extent(min(Data$longitude),max(Data$longitude),min(Data$latitude),max(Data$latitude)) # define the extent
BClim = crop(BClim, YbrevRange)
writeRaster(BClim, filename="data/YbrevBC_2.5.grd", overwrite=T)
writeRaster(BClim, filename="YbrevBC_2.5.grd", overwrite=T)
BClim = brick("C:/Users/12094/Desktop/apENM/data/YbrevBC_2.5.grd")
BClim
# this format plots the first (of 19) variables stored in BClim; change the 1 to 2-19 for the others
plot(BClim, 1, cex=0.5, legend=T, mar=par("mar"), xaxt="n", yaxt="n", main="Annual mean temperature (ºC x 10)")
map("state", xlim=c(min(Data$longitude),max(Data$longitude)), ylim=c(min(Data$latitude),max(Data$latitude)), fill=F, col="cornsilk", add=T)
library(maptools)
map("state", xlim=c(min(Data$longitude),max(Data$longitude)), ylim=c(min(Data$latitude),max(Data$latitude)), fill=F, col="cornsilk", add=T)
require(maps)
#install.packages(c("dismo", "raster", "rgdal", "rJava"))
#install.packages("dismo")
#install.packages("raster")
#install.packages("rgdal")
#install.packages("rJava")
#install.packages("maptools")
#install.packages("readr")
install.packages(maps)
#install.packages(c("dismo", "raster", "rgdal", "rJava"))
#install.packages("dismo")
#install.packages("raster")
#install.packages("rgdal")
#install.packages("rJava")
#install.packages("maptools")
#install.packages("readr")
install.packages("maps")
require(mapdata)
#install.packages(c("dismo", "raster", "rgdal", "rJava"))
#install.packages("dismo")
#install.packages("raster")
#install.packages("rgdal")
#install.packages("rJava")
#install.packages("maptools")
#install.packages("readr")
#install.packages("maps")
install.packages("mapdata")
library(mapdata)
# this format plots the first (of 19) variables stored in BClim; change the 1 to 2-19 for the others
plot(BClim, 1, cex=0.5, legend=T, mar=par("mar"), xaxt="n", yaxt="n", main="Annual mean temperature (ºC x 10)")
map("state", xlim=c(min(Data$longitude),max(Data$longitude)), ylim=c(min(Data$latitude),max(Data$latitude)), fill=F, col="cornsilk", add=T)
BClim
BClim = crop(BClim, YbrevRange)
BClim
# this format plots the first (of 19) variables stored in BClim; change the 1 to 2-19 for the others
plot(BClim, 1, cex=0.5, legend=T, mar=par("mar"), xaxt="n", yaxt="n", main="Annual mean temperature (ºC x 10)")
map("state", xlim=c(min(Data$longitude),max(Data$longitude)), ylim=c(min(Data$latitude),max(Data$latitude)), fill=F, col="cornsilk", add=T)
map("state", xlim=c(min(Data$longitude),max(Data$longitude)), ylim=c(min(Data$latitude),max(Data$latitude)), fill=F, col="cornsilk", add=T)
map("state", xlim=c(min(Data$longitude),max(Data$longitude)), ylim=c(min(Data$latitude),max(Data$latitude)), fill=F, col="cornsilk", add=T)
# this format plots the first (of 19) variables stored in BClim; change the 1 to 2-19 for the others
plot(BClim, 1, cex=0.5, legend=T, mar=par("mar"), xaxt="n", yaxt="n", main="Annual mean temperature (ºC x 10)")
map("state", xlim=c(min(Data$longitude),max(Data$longitude)), ylim=c(min(Data$latitude),max(Data$latitude)), fill=F, col="cornsilk", add=T)
BClim
stack(BCliim)
BClim_files <- list.files(path ="C:/Users/12094/Desktop/apENM/data/wc2-5", pattern='grd$', full.names=TRUE)
BClim_files
rm(BClim_files)
BClim
